# Generated by Django 5.1.4 on 2025-04-24 17:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "foto_perfil",
                    models.ImageField(
                        blank=True,
                        default="foto_perfil/default.png",
                        upload_to="foto_perfil/",
                    ),
                ),
                (
                    "dni",
                    models.CharField(
                        max_length=8,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "Solo números permitidos."
                            )
                        ],
                    ),
                ),
                ("fecha_nacimiento", models.DateField(blank=True, null=True)),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculino"), ("F", "Femenino")],
                        max_length=1,
                    ),
                ),
                (
                    "correo_institucional",
                    models.EmailField(blank=True, max_length=254, unique=True),
                ),
                ("departamento", models.CharField(blank=True, max_length=30)),
                ("distrito", models.CharField(blank=True, max_length=30)),
                ("provincia", models.CharField(blank=True, max_length=30)),
                (
                    "telefono",
                    models.CharField(
                        max_length=15,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Formato: +[código][número]"
                            )
                        ],
                    ),
                ),
                ("direccion", models.CharField(blank=True, max_length=50)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="PerfilAdministrativo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cargo",
                    models.CharField(
                        choices=[
                            ("ADM", "Administrador"),
                            ("SEC", "Secretario/a"),
                            ("COO", "Coordinador/a"),
                            ("CON", "Contador"),
                            ("DIR", "Director/a"),
                        ],
                        max_length=3,
                    ),
                ),
                (
                    "departamento",
                    models.CharField(
                        choices=[
                            ("ACAD", "Académico"),
                            ("ADM", "Administración"),
                            ("FIN", "Finanzas"),
                            ("MAT", "Matrículas"),
                            ("REC", "Recursos Humanos"),
                        ],
                        max_length=4,
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerfilDocente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("especialidad", models.CharField(max_length=50)),
                (
                    "grado_educacion",
                    models.CharField(
                        choices=[
                            ("BACH", "Bachiller"),
                            ("LIC", "Licenciado"),
                            ("MG", "Magíster"),
                            ("DR", "Doctor"),
                            ("OTRO", "Otro"),
                        ],
                        default="LIC",
                        max_length=4,
                    ),
                ),
                (
                    "curriculum_vitae",
                    models.FileField(blank=True, null=True, upload_to="curriculums/"),
                ),
                (
                    "horas_trabajo",
                    models.PositiveSmallIntegerField(
                        default=40, help_text="Horas de trabajo semanales"
                    ),
                ),
                ("fecha_contratacion", models.DateField(blank=True, null=True)),
                ("especializaciones", models.TextField(blank=True)),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerfilEstudiante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "codigo_estudiante",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator("^[A-Z0-9]{6,10}$")
                        ],
                    ),
                ),
                ("nombre_apoderado", models.CharField(max_length=50)),
                ("apellido_apoderado", models.CharField(max_length=50)),
                (
                    "promedio_general",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=3),
                ),
                ("grado", models.CharField(max_length=20)),
                ("seccion", models.CharField(max_length=1)),
                ("alergias", models.TextField(blank=True)),
                ("enfermedades", models.TextField(blank=True)),
                ("telefono_apoderado", models.CharField(max_length=15)),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerfilMedico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("registro_profesional", models.CharField(max_length=50)),
                (
                    "especialidad",
                    models.CharField(
                        choices=[
                            ("PED", "Pediatría"),
                            ("PSIC", "Psicología"),
                            ("ENF", "Enfermería"),
                            ("GEN", "Medicina General"),
                        ],
                        max_length=4,
                    ),
                ),
                ("horario_atencion", models.CharField(max_length=100)),
                ("telefono_emergencia", models.CharField(max_length=15)),
                ("consultorio", models.CharField(blank=True, max_length=20)),
                (
                    "pacientes",
                    models.ManyToManyField(
                        blank=True, related_name="medicos", to="core.perfilestudiante"
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerfilPadre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ocupacion", models.CharField(max_length=50)),
                (
                    "nivel_educativo",
                    models.CharField(
                        choices=[
                            ("PRIM", "Primaria"),
                            ("SEC", "Secundaria"),
                            ("SUP", "Superior"),
                            ("TEC", "Técnico"),
                            ("POS", "Posgrado"),
                        ],
                        max_length=4,
                    ),
                ),
                ("direccion_trabajo", models.CharField(blank=True, max_length=100)),
                ("telefono_trabajo", models.CharField(blank=True, max_length=15)),
                (
                    "parentesco",
                    models.CharField(
                        choices=[
                            ("PADRE", "Padre"),
                            ("MADRE", "Madre"),
                            ("TUTOR", "Tutor"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "estudiantes_a_cargo",
                    models.ManyToManyField(
                        blank=True, related_name="tutores", to="core.perfilestudiante"
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
