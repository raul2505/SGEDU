# Generated by Django 5.1.4 on 2025-05-09 05:46

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "dni",
                    models.CharField(
                        help_text="Documento Nacional de Identidad (8 dígitos)",
                        max_length=8,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d+$", "Solo números permitidos."
                            )
                        ],
                        verbose_name="DNI",
                    ),
                ),
                (
                    "foto_perfil",
                    models.ImageField(
                        blank=True,
                        default="usuarios/fotos/default.png",
                        upload_to="usuarios/fotos/",
                        verbose_name="Foto de perfil",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "ordering": ["last_name", "first_name"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="PerfilAdministrativo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Formato: +[código][número]"
                            )
                        ],
                        verbose_name="Teléfono",
                    ),
                ),
                ("direccion", models.TextField(blank=True, verbose_name="Dirección")),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Femenino"),
                            ("O", "Otro"),
                            ("N", "Prefiero no decir"),
                        ],
                        max_length=1,
                        verbose_name="Género",
                    ),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                ("actualizado", models.DateTimeField(auto_now=True)),
                (
                    "provincia",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Provincia"
                    ),
                ),
                (
                    "distrito",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Distrito"
                    ),
                ),
                (
                    "cargo",
                    models.CharField(
                        choices=[
                            ("ADM", "Administrador"),
                            ("SEC", "Secretario/a"),
                            ("COO", "Coordinador/a"),
                            ("CON", "Contador"),
                            ("DIR", "Director/a"),
                        ],
                        max_length=3,
                        verbose_name="Cargo",
                    ),
                ),
                (
                    "departamento",
                    models.CharField(
                        choices=[
                            ("ACAD", "Académico"),
                            ("ADM", "Administración"),
                            ("FIN", "Finanzas"),
                            ("MAT", "Matrículas"),
                            ("REC", "Recursos Humanos"),
                        ],
                        max_length=4,
                        verbose_name="Departamento",
                    ),
                ),
                (
                    "fecha_ingreso",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de ingreso"
                    ),
                ),
                (
                    "horario_laboral",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Horario laboral"
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil administrativo",
                "verbose_name_plural": "Perfiles administrativos",
            },
        ),
        migrations.CreateModel(
            name="PerfilDocente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Formato: +[código][número]"
                            )
                        ],
                        verbose_name="Teléfono",
                    ),
                ),
                ("direccion", models.TextField(blank=True, verbose_name="Dirección")),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Femenino"),
                            ("O", "Otro"),
                            ("N", "Prefiero no decir"),
                        ],
                        max_length=1,
                        verbose_name="Género",
                    ),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                ("actualizado", models.DateTimeField(auto_now=True)),
                (
                    "departamento",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Departamento"
                    ),
                ),
                (
                    "provincia",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Provincia"
                    ),
                ),
                (
                    "distrito",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Distrito"
                    ),
                ),
                (
                    "especialidad",
                    models.CharField(max_length=100, verbose_name="Especialidad"),
                ),
                (
                    "grado_academico",
                    models.CharField(
                        choices=[
                            ("BACH", "Bachiller"),
                            ("LIC", "Licenciado"),
                            ("MG", "Magíster"),
                            ("DR", "Doctor"),
                            ("OTRO", "Otro"),
                        ],
                        default="LIC",
                        max_length=4,
                        verbose_name="Grado académico",
                    ),
                ),
                (
                    "curriculum",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="docentes/curriculums/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["pdf", "doc", "docx"]
                            )
                        ],
                        verbose_name="Currículum Vitae",
                    ),
                ),
                (
                    "fecha_contratacion",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de contratación"
                    ),
                ),
                (
                    "horas_contrato",
                    models.PositiveSmallIntegerField(
                        default=40, verbose_name="Horas de contrato semanales"
                    ),
                ),
                ("activo", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de docente",
                "verbose_name_plural": "Perfiles de docentes",
            },
        ),
        migrations.CreateModel(
            name="PerfilEstudiante",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Formato: +[código][número]"
                            )
                        ],
                        verbose_name="Teléfono",
                    ),
                ),
                ("direccion", models.TextField(blank=True, verbose_name="Dirección")),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Femenino"),
                            ("O", "Otro"),
                            ("N", "Prefiero no decir"),
                        ],
                        max_length=1,
                        verbose_name="Género",
                    ),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                ("actualizado", models.DateTimeField(auto_now=True)),
                (
                    "departamento",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Departamento"
                    ),
                ),
                (
                    "provincia",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Provincia"
                    ),
                ),
                (
                    "distrito",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Distrito"
                    ),
                ),
                (
                    "codigo_estudiante",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z0-9]{6,10}$", "Formato inválido"
                            )
                        ],
                        verbose_name="Código de estudiante",
                    ),
                ),
                (
                    "grado",
                    models.CharField(
                        choices=[
                            ("1PRIM", "Primero de Primaria"),
                            ("2PRIM", "Segundo de Primaria"),
                            ("3PRIM", "Tercero de Primaria"),
                            ("4PRIM", "Cuarto de Primaria"),
                            ("5PRIM", "Quinto de Primaria"),
                            ("6PRIM", "Sexto de Primaria"),
                            ("1SEC", "Primero de Secundaria"),
                            ("2SEC", "Segundo de Secundaria"),
                            ("3SEC", "Tercero de Secundaria"),
                            ("4SEC", "Cuarto de Secundaria"),
                            ("5SEC", "Quinto de Secundaria"),
                        ],
                        max_length=5,
                        verbose_name="Grado",
                    ),
                ),
                (
                    "seccion",
                    models.CharField(default="A", max_length=1, verbose_name="Sección"),
                ),
                (
                    "promedio_general",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=4,
                        verbose_name="Promedio general",
                    ),
                ),
                (
                    "alergias",
                    models.TextField(blank=True, verbose_name="Alergias conocidas"),
                ),
                (
                    "condiciones_medicas",
                    models.TextField(blank=True, verbose_name="Condiciones médicas"),
                ),
                (
                    "nombre_apoderado",
                    models.CharField(
                        max_length=100, verbose_name="Nombre del apoderado"
                    ),
                ),
                (
                    "telefono_apoderado",
                    models.CharField(
                        max_length=15, verbose_name="Teléfono del apoderado"
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de estudiante",
                "verbose_name_plural": "Perfiles de estudiantes",
            },
        ),
        migrations.CreateModel(
            name="PerfilMedico",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Formato: +[código][número]"
                            )
                        ],
                        verbose_name="Teléfono",
                    ),
                ),
                ("direccion", models.TextField(blank=True, verbose_name="Dirección")),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Femenino"),
                            ("O", "Otro"),
                            ("N", "Prefiero no decir"),
                        ],
                        max_length=1,
                        verbose_name="Género",
                    ),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                ("actualizado", models.DateTimeField(auto_now=True)),
                (
                    "departamento",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Departamento"
                    ),
                ),
                (
                    "provincia",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Provincia"
                    ),
                ),
                (
                    "distrito",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Distrito"
                    ),
                ),
                (
                    "registro_profesional",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Registro profesional"
                    ),
                ),
                (
                    "especialidad",
                    models.CharField(
                        choices=[
                            ("PED", "Pediatría"),
                            ("PSIC", "Psicología"),
                            ("ENF", "Enfermería"),
                            ("GEN", "Medicina General"),
                        ],
                        max_length=4,
                        verbose_name="Especialidad",
                    ),
                ),
                (
                    "horario_atencion",
                    models.CharField(
                        max_length=100, verbose_name="Horario de atención"
                    ),
                ),
                (
                    "telefono_emergencia",
                    models.CharField(
                        max_length=15, verbose_name="Teléfono de emergencia"
                    ),
                ),
                (
                    "consultorio",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Consultorio"
                    ),
                ),
                (
                    "pacientes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="medicos",
                        to="core.perfilestudiante",
                        verbose_name="Pacientes a cargo",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil médico",
                "verbose_name_plural": "Perfiles médicos",
            },
        ),
        migrations.CreateModel(
            name="PerfilPadreFamilia",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?\\d{9,15}$", "Formato: +[código][número]"
                            )
                        ],
                        verbose_name="Teléfono",
                    ),
                ),
                ("direccion", models.TextField(blank=True, verbose_name="Dirección")),
                (
                    "fecha_nacimiento",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Femenino"),
                            ("O", "Otro"),
                            ("N", "Prefiero no decir"),
                        ],
                        max_length=1,
                        verbose_name="Género",
                    ),
                ),
                ("creado", models.DateTimeField(auto_now_add=True)),
                ("actualizado", models.DateTimeField(auto_now=True)),
                (
                    "departamento",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Departamento"
                    ),
                ),
                (
                    "provincia",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Provincia"
                    ),
                ),
                (
                    "distrito",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="Distrito"
                    ),
                ),
                (
                    "ocupacion",
                    models.CharField(max_length=100, verbose_name="Ocupación"),
                ),
                (
                    "nivel_educativo",
                    models.CharField(
                        choices=[
                            ("PRIM", "Primaria"),
                            ("SEC", "Secundaria"),
                            ("SUP", "Superior"),
                            ("TEC", "Técnico"),
                            ("POS", "Posgrado"),
                        ],
                        max_length=4,
                        verbose_name="Nivel educativo",
                    ),
                ),
                (
                    "parentesco",
                    models.CharField(
                        choices=[
                            ("PADRE", "Padre"),
                            ("MADRE", "Madre"),
                            ("TUTOR", "Tutor legal"),
                            ("OTRO", "Otro"),
                        ],
                        max_length=5,
                        verbose_name="Parentesco",
                    ),
                ),
                (
                    "direccion_trabajo",
                    models.TextField(blank=True, verbose_name="Dirección de trabajo"),
                ),
                (
                    "telefono_trabajo",
                    models.CharField(
                        blank=True, max_length=15, verbose_name="Teléfono de trabajo"
                    ),
                ),
                (
                    "estudiantes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="padres",
                        to="core.perfilestudiante",
                        verbose_name="Estudiantes a cargo",
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil de padre/tutor",
                "verbose_name_plural": "Perfiles de padres/tutores",
            },
        ),
    ]
